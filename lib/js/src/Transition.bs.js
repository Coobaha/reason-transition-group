// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Index = require("react-transition-group/index");

function make(_in, mountOnEnter, unmountOnExit, appear, enter, exit, timeout, onEnter, onEntering, onEntered, onExit, onExiting, onExited, children) {
  var tmp = { };
  if (_in !== undefined) {
    tmp.in = Caml_option.valFromOption(_in);
  }
  if (mountOnEnter !== undefined) {
    tmp.mountOnEnter = Caml_option.valFromOption(mountOnEnter);
  }
  if (unmountOnExit !== undefined) {
    tmp.unmountOnExit = Caml_option.valFromOption(unmountOnExit);
  }
  if (appear !== undefined) {
    tmp.appear = Caml_option.valFromOption(appear);
  }
  if (enter !== undefined) {
    tmp.enter = Caml_option.valFromOption(enter);
  }
  if (exit !== undefined) {
    tmp.exit = Caml_option.valFromOption(exit);
  }
  if (timeout !== undefined) {
    tmp.timeout = Caml_option.valFromOption(timeout);
  }
  if (onEnter !== undefined) {
    tmp.onEnter = Caml_option.valFromOption(onEnter);
  }
  if (onEntering !== undefined) {
    tmp.onEntering = Caml_option.valFromOption(onEntering);
  }
  if (onEntered !== undefined) {
    tmp.onEntered = Caml_option.valFromOption(onEntered);
  }
  if (onExit !== undefined) {
    tmp.onExit = Caml_option.valFromOption(onExit);
  }
  if (onExiting !== undefined) {
    tmp.onExiting = Caml_option.valFromOption(onExiting);
  }
  if (onExited !== undefined) {
    tmp.onExited = Caml_option.valFromOption(onExited);
  }
  return ReasonReact.wrapJsForReason(Index.Transition, tmp, children);
}

exports.make = make;
/* ReasonReact Not a pure module */
